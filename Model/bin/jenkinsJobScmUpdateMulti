#!/usr/bin/perl


use strict;

my ($sourceSite, $projectsFile) = @ARGV;


usage() unless $sourceSite && $projectsFile;


my @projects;
my %notComponent;
if ($projectsFile) {
  open(F, $projectsFile) || die "Can't open projectsFile '$projectsFile'\n";
  while (<F>) {
    next if /^#/; # skip comments
    my ($abbrev, $project, $instanceSuffixOverride, $notApisite, $notComponent) = split(/\s/);
    die "In projects_file '$projectsFile' abbrev '$abbrev' is not valid.  It should be four letters\n" unless $abbrev =~ /\w\w\w\w/;
    die "In projects_file '$projectsFile' project '$project' is not valid.  It should end in DB\n" unless $project =~ /DB$/ || $project eq 'OrthoMCL';
    push(@projects, $project);
    $notComponent{$project} = 1 if $notComponent;
  }
  close(F);
}

foreach my $project (@projects) {
  next if $notComponent{$project};
  my $cmd = "jenkinsJobScmUpdate $sourceSite maint.$project.org";
  print STDERR "running cmd: $cmd\n";
  system($cmd) && die "Failed running command '$cmd'\n";
}

sub usage {
  die "

Calls jenkinsJobScmUpdate for a list of projects

Usage: jenkinsJobScmUpdateMulti source_site projects_file

Where:
  source_site:  the site to copy from, eg q1.plasmodb.org
  projects_file: a tab delimited file.  first column is four letter abbrev of project, eg, plas, (ignored).  second column is project name, eg PlasmoDB.  Fifth column is flag indicating this project is not a component site (and so should be skipped by this script)
";
}

